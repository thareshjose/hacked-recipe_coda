{"version":3,"sources":["components/Search/Search.js","hooks/useFetch.js","components/RecipeQuickView/RecipeQuickView.js","components/RecipeCard/RecipeCard.js","components/Loader/Loader.js","components/Home/Home.js","components/RecipeDetails/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["Search","filterRecipes","recipes","JSON","parse","localStorage","getItem","className","src","alt","type","placeholder","onChange","e","input","target","value","filteredRecipes","filter","recipe","name","toLowerCase","includes","useFetch","url","useState","isLoading","setIsLoading","setRecipes","useEffect","a","fetch","response","ok","json","setItem","stringify","setTimeout","console","log","fetchRecipes","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","borderRadius","RecipeQuickView","showPopup","togglePopup","isOpen","onRequestClose","style","onClick","image","price","category","description","RecipeCard","index","isFavorite","setIsFavorite","setShowPopup","toggleFavorite","backgroundImage","toUpperCase","substring","Loader","Home","searchTerm","clear","length","map","key","id","RecipeDetails","props","match","params","App","basename","path","exact","strict","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.952df86b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nconst Search = ({ filterRecipes }) => {\r\n  const recipes = JSON.parse(localStorage.getItem(\"recipes\"));\r\n\r\n  const searchRecipe = (e) => {\r\n    const input = e.target.value;\r\n    // setSearchTerm(input);\r\n    const filteredRecipes = recipes.filter((recipe) =>\r\n      recipe.name.toLowerCase().includes(input)\r\n    );\r\n    filterRecipes(filteredRecipes, input);\r\n  };\r\n  return (\r\n    <div className=\"search-container\">\r\n      <img\r\n        src=\"Assets/Icons/Icon feather-search.png\"\r\n        alt=\"search\"\r\n        className=\"search-icon\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search your favourite recipe...\"\r\n        onChange={searchRecipe}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipes = async () => {\r\n      const response = await fetch(\"http://starlord.hackerearth.com/recipe\");\r\n      if (response.ok) {\r\n        const recipes = await response.json();\r\n        localStorage.setItem(\"recipes\", JSON.stringify(recipes));\r\n        setRecipes(recipes);\r\n        setTimeout(() => {\r\n          setIsLoading(false);\r\n        }, 2000);\r\n      } else {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n    fetchRecipes();\r\n  }, []);\r\n\r\n  return [recipes, setRecipes, isLoading];\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./recipe-quick-view.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    borderRadius: \"15px\",\r\n  },\r\n};\r\n\r\nconst RecipeQuickView = ({ recipe, showPopup, togglePopup }) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={showPopup}\r\n        onRequestClose={togglePopup}\r\n        style={customStyles}\r\n      >\r\n        <button onClick={togglePopup} className=\"popup-close-btn\">\r\n          CLOSE\r\n        </button>\r\n        <div className=\"popup-container\">\r\n          <img src={recipe.image} alt={recipe.name} />\r\n          <div className=\"popup-recipe-details\">\r\n            <p className=\"popup-recipe-title\">{recipe.name}</p>\r\n            <p className=\"popup-recipe-price\">${recipe.price}</p>\r\n            <p className=\"popup-recipe-category\">{recipe.category}</p>\r\n            <p className=\"popup-recipe-description\">{recipe.description}</p>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeQuickView;\r\n","import React, { useState } from \"react\";\r\nimport \"./RecipeCard.css\";\r\nimport RecipeQuickView from \"./../RecipeQuickView/RecipeQuickView\";\r\n\r\nconst RecipeCard = ({ recipe, index }) => {\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const toggleFavorite = () => {\r\n    setIsFavorite(!isFavorite);\r\n  };\r\n\r\n  const togglePopup = () => {\r\n    setShowPopup(!showPopup);\r\n  };\r\n  return (\r\n    <>\r\n      {showPopup && (\r\n        <RecipeQuickView\r\n          recipe={recipe}\r\n          showPopup={showPopup}\r\n          togglePopup={togglePopup}\r\n        />\r\n      )}\r\n      <div className=\"recipe-card\">\r\n        <div\r\n          className=\"recipe-card-image-container\"\r\n          style={{ backgroundImage: `url('${recipe.image}')` }}\r\n        >\r\n          <p className=\"recipe-card-category\">{`In ${recipe.category[0].toUpperCase()}${recipe.category.substring(\r\n            1\r\n          )}`}</p>\r\n        </div>\r\n        <div className=\"card-title-container\">\r\n          <div className=\"card-title-price-container\">\r\n            <p className=\"card-recipe-title\">{recipe.name}</p>\r\n            <p className=\"card-recipe-price\">${recipe.price}</p>\r\n          </div>\r\n          <div className=\"card-icon\">\r\n            {isFavorite ? (\r\n              <img\r\n                src=\"/Assets/Icons/Icon feather-heart-color.png\"\r\n                alt=\"favourite\"\r\n                onClick={toggleFavorite}\r\n              />\r\n            ) : index % 2 === 0 ? (\r\n              <img\r\n                src=\"/Assets/Icons/Icon feather-heart-white.png\"\r\n                alt=\"favourite\"\r\n                onClick={toggleFavorite}\r\n              />\r\n            ) : (\r\n              <img\r\n                src=\"/Assets/Icons/Icon feather-heart.png\"\r\n                alt=\"favourite\"\r\n                onClick={toggleFavorite}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-recipe-description\">\r\n          <p>{recipe.description}</p>\r\n        </div>\r\n        <button className=\"card-view-more-btn\" onClick={togglePopup}>\r\n          View\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;\r\n","import React from \"react\";\r\nimport \"./loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <img\r\n        src=\"/Assets/Images/pizza-slice.png\"\r\n        alt=\"pizza\"\r\n        className=\"loader-img\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect } from \"react\";\r\nimport Search from \"../Search/Search\";\r\nimport \"./Home.css\";\r\nimport useFetch from \"./../../hooks/useFetch\";\r\nimport RecipeCard from \"./../RecipeCard/RecipeCard\";\r\nimport Loader from \"./../Loader/Loader\";\r\n\r\nconst Home = () => {\r\n  let [recipes, setRecipes, isLoading] = useFetch();\r\n  let searchTerm = \"\";\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      localStorage.clear();\r\n    };\r\n  }, []);\r\n\r\n  const filterRecipes = (filteredRecipes, input) => {\r\n    searchTerm = input;\r\n    recipes = filteredRecipes;\r\n    setRecipes(recipes);\r\n  };\r\n  return (\r\n    <div className=\"home-container\">\r\n      <Search filterRecipes={filterRecipes} />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"recipes-container\">\r\n          {recipes.length === 0 && (\r\n            <p className=\"zero-result-text\">No recipes found...!</p>\r\n          )}\r\n          {recipes.map((recipe, index) => {\r\n            return (\r\n              <RecipeCard\r\n                key={recipe.id}\r\n                recipe={recipe}\r\n                index={index}\r\n                searchTerm={searchTerm}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction RecipeDetails(props) {\r\n  let id = props.match.params.id;\r\n  console.log(id);\r\n  return (\r\n    <div>\r\n      <h1>Recipe Details Page</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeDetails;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport RecipeDetails from \"./components/RecipeDetails/RecipeDetails\";\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route path=\"/\" exact strict component={Home} />\n\n        <Route path=\"/:id\" exact strict component={RecipeDetails} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}